#!/usr/bin/python -tt
#
# Copyright 2013 Eucalyptus Systems, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 3 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see http://www.gnu.org/licenses/.
#
# Please contact Eucalyptus Systems, Inc., 6755 Hollister Ave., Goleta
# CA 93117, USA or visit http://www.eucalyptus.com/licenses/ if you need
# additional information or have any questions.

import filecmp
import os
import re
import shutil
import subprocess
import sys
import syslog
import tempfile
import urllib2

USERDATA_URL = 'http://169.254.169.254/latest/user-data'
SERVER_RE = re.compile('^server')


def parse_userdata(data):
    return dict(item.split('=') for item in data.strip(';').split(';'))

def backup_orig():
    # Back up the original just in case
    if not os.path.exists('/etc/ntp.conf.orig'):
        syslog.syslog("Writing original config to /etc/ntp.conf.orig")
        shutil.copyfile('/etc/ntp.conf', '/etc/ntp.conf.orig')

syslog.syslog("Starting NTP server check")

try:
    syslog.syslog("Reading user data from {0}".format(USERDATA_URL))
    out = urllib2.urlopen(USERDATA_URL).read()
except urllib2.URLError as ex:
    syslog.syslog(str(ex))
    sys.exit(1)

userdata = parse_userdata(out)
syslog.syslog("userdata: {0}".format(userdata))
ntp_server = userdata.get('ntp_server', None)
backup_orig()

if ntp_server:
    syslog.syslog("Found NTP server(s) in userdata: {0}".format(ntp_server))
    tmpfile = tempfile.NamedTemporaryFile(prefix='ntp-update')
    with open('/etc/ntp.conf.orig', 'r') as ntpfile:
        for line in ntpfile.readlines():
            if SERVER_RE.search(line):
                tmpfile.write('# {0}'.format(line))
            else:
                tmpfile.write(line)
    for server in ntp_server.split(','):
        tmpfile.write("server {0}\n".format(server))
    tmpfile.flush()
    if not filecmp.cmp('/etc/ntp.conf', tmpfile.name):
        syslog.syslog("Updating NTP configuration")
        try:
            subprocess.check_call(['/sbin/service', 'ntpd', 'stop'])
            shutil.move('/etc/ntp.conf', '/etc/ntp.conf.bak')
            shutil.copyfile(tmpfile.name, '/etc/ntp.conf')
            os.chmod('/etc/ntp.conf', 0644)
            os.chown('/etc/ntp.conf', 0, 0)
            subprocess.check_call(['/usr/sbin/ntpdate', ntp_server.split(',')[0]])
            subprocess.check_call(['/sbin/service', 'ntpd', 'start'])
        except subprocess.CalledProcessError as ex:
            syslog.syslog("Command failed with status: {0}".format(ex.returncode))
            sys.exit(1)
else:
    syslog.syslog("No NTP server specified")
